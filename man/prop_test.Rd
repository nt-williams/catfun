% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prop_test.R
\name{prop_test}
\alias{prop_test}
\alias{prop_test.default}
\alias{prop_test.data.frame}
\alias{prop_test.numeric}
\alias{prop_test.table}
\alias{prop_test.matrix}
\alias{print.prop_test}
\title{Tests for equality of proportions}
\usage{
prop_test(x, ...)

\method{prop_test}{default}(x, ...)

\method{prop_test}{data.frame}(x, pred, out, weight = NULL,
  rev = c("neither", "rows", "columns", "both"), method = c("wald",
  "wilson", "agresti-couli", "jeffreys", "modified wilson", "wilsoncc",
  "modified jeffreys", "clopper-pearson", "arcsine", "logit", "witting",
  "pratt"), alternative = c("two.sided", "less", "greater"),
  conf.level = 0.95, correct = FALSE, exact = FALSE, ...)

\method{prop_test}{numeric}(x, n, p = 0.5, method = c("wald", "wilson",
  "agresti-couli", "jeffreys", "modified wilson", "wilsoncc",
  "modified jeffreys", "clopper-pearson", "arcsine", "logit", "witting",
  "pratt"), alternative = c("two.sided", "less", "greater"),
  conf.level = 0.95, correct = FALSE, exact = FALSE, ...)

\method{prop_test}{table}(x, method = c("wald", "wilson",
  "agresti-couli", "jeffreys", "modified wilson", "wilsoncc",
  "modified jeffreys", "clopper-pearson", "arcsine", "logit", "witting",
  "pratt"), alternative = c("two.sided", "less", "greater"),
  conf.level = 0.95, correct = FALSE, exact = FALSE, ...)

\method{prop_test}{matrix}(x, n, p = NULL, method = c("wald", "wilson",
  "agresti-couli", "jeffreys", "modified wilson", "wilsoncc",
  "modified jeffreys", "clopper-pearson", "arcsine", "logit", "witting",
  "pratt"), alternative = c("two.sided", "less", "greater"),
  conf.level = 0.95, correct = FALSE, exact = FALSE, ...)

\method{print}{prop_test}(x, ...)
}
\arguments{
\item{x}{a vector of counts, a one-dimensional table with two entries, or a two-dimensional table with 2 columns. Used to select method.}

\item{...}{further arguments passed to or from other methods.}

\item{pred}{predictor/exposure, vector. Must be blank if x is a table or matrix.}

\item{out}{outcome, vector. Must be blank if x is a table or matrix.}

\item{weight}{an optional vector of count weights. Must be blank if x is a table or matrix.}

\item{method}{a character string indicating method for calculating confidence interval, default is "wald".}

\item{alternative}{character string specifiying the alternative hypothesis. Possible options are "two.sided" (default),
"greater", or "less".}

\item{conf.level}{confidence level for confidence interval, default is 0.95.}

\item{correct}{a logical indicating whether Yate's continuity correction should be applied.}

\item{exact}{a logical indicating whether to output exact p-value, ignored if k-sample test.}

\item{n}{a vector of counts of trials, ignored if x is a matrix or table.}

\item{p}{a probability for the null hypothesis when testing a single proportion; ignored if comparing multiple proportions.}
}
\value{
a list with class "prop_test" containing the following components:

\item{x}{number of successes}
\item{n}{number of trials}
\item{p}{null proportion}
\item{statistic}{the value of Pearson's chi-squared test statistic}
\item{p_value}{p-value corresponding to chi-squared test statistic}
\item{df}{degrees of freedom}
\item{method}{the method used to calculate the confidence interval}
\item{method_ci}{confidence interval calculated using specified method}
\item{exact_ci}{exact confidence interval}
\item{exact_p}{p-value from exact test}
}
\description{
Conduct 1-sample tests of proportions and tests for equality of k proportions.
}
\examples{
prop_test(7, 50, method = "wald", p = 0.2)
prop_test(7, 50, method = "wald", p = 0.2, exact = TRUE)
prop_test(c(23, 24), c(50, 55))

vietnam <- data.frame(
   service = c(rep("yes", 2), rep("no", 2)),
   sleep = c(rep(c("yes", "no"), 2)),
   count = c(173, 160, 599, 851)
)

sleep <- xtabs(count ~ service + sleep, data = vietnam)
prop_test(sleep)

prop_test(vietnam, service, sleep, count)

}
